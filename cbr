#!/bin/bash

usage() {
  echo
  echo "Usage:"
  echo "cbr <option> [<option>] [--pull]"
}

delete_branch() {
  # https://stackoverflow.com/questions/7726949/remove-tracking-branches-no-longer-on-remote/#33548037 
  git fetch -p &&
  for branch in `git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'`;
  do
    git branch -D $branch;
  done
}

cd_clean() {
  for DIR in "${DIR_ARR[@]}"; do
    printf "\n========== %20s \t==========\n" ${DIR}
    cd "${HOME}/Desktop/qw/${DIR}"
    delete_branch
    if [ $PULL == 1 ]; then
      git pull origin develop
    fi
  done
}

parse() {
  case $1 in
    "dashboard")
      echo "black-widow dashboards-api aqwire-db"
      ;;
    "portals")
      echo "doctor-strange apocalypse"
      ;;
    *)
      echo "Error"
      usage
      ;;
  esac
}

validate() {
  if [ $# == 0 ]; then
    echo "No option specified."
    usage
    exit 1
  fi

  for ARG in $@; do
    if [ $ARG == '--pull' ]; then
      PULL=1
      continue
    fi

    DIRS=$(parse $ARG)
    if [ "$DIRS" == "Error" ]; then
      echo "No option matches '$ARG'."
      exit 1
    fi

    ARGS_ARR+=("$ARG")
    DIRS_ARR+=("$DIRS")
  done
}

IFS=" "
PULL=0
ARGS_ARR=()
DIRS_ARR=()
DIR_ARR=""

validate $@

IDX=0
for i in "${ARGS_ARR[@]}"; do
  printf "*************** \t %s \t ***************\n" ${ARGS_ARR[$IDX]}

  for DIRS in "${DIRS_ARR[$IDX]}"; do
    read -ra DIR_ARR <<< "$DIRS"
    cd_clean
  done

  echo
  IDX=$((IDX+1))
done

